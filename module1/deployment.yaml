apiVersion: v1
kind: Namespace
metadata:
  name: mock
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-deployment
  namespace: mock
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app-replica
  template:
    metadata:
      labels:
        app: my-app-replica
    spec:
      containers:
      - name: my-app-container
        image: node-hpa:1.0
        ports:
        - containerPort: 7878
        resources:
          requests:
            memory: "64Mi"
            cpu: "1m" # Milicores - 1/4 de CPU (250m = 0.25 CPU) (1 CPU = 1000m)
          limits:
            memory: "128Mi"
            cpu: "2m"
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
  namespace: mock
spec:
  selector:
    app: my-app-replica
  ports:
  - protocol: TCP
    port: 80
    targetPort: 7878
---
#apiVersion: autoscaling/v1
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: my-app-hpa
  namespace: mock
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-app-deployment
  minReplicas: 2
  maxReplicas: 5
  #targetCPUUtilizationPercentage: 1
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 1
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 10
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  namespace: mock
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2 # Redireciona a requisição para a raiz do serviço
    # nginx.ingress.kubernetes.io/rewrite-target: / # Redireciona a requisição para a raiz do serviço
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /my-app(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: my-app-service
            port:
              number: 80