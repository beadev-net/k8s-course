apiVersion: v1
kind: Service
metadata:
  name: mysql-replica-service
  namespace: aula6
spec:
  type: NodePort
  ports:
    - port: 3306
      targetPort: 3306
      nodePort: 32000
  selector:
    app: mysql
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-replica-secret
  namespace: aula6
type: Opaque
data:
  db_database: bXlkYXRhYmFzZQ==
  db_password: eW91cl9wYXNzd29yZA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-replica-config
  namespace: aula6
data:
  replica.sh: |
    #!bin/sh
    MASTER_POD='mysql-master-8-0'
    REPLICA_POD='mysql-replica-8-0'
    NAMESPACE='aula6'
    MYSQL_ROOT_PASSWORD='your_password'
    MYSQL_SOCKET='/var/lib/mysql/mysql.sock'
    MASTER_SERVICE='mysql-master-service.aula6.svc.cluster.local'
    REPLICA_SERVICE='mysql-replica-service.aula6.svc.cluster.local'

    echo "[MASTER] Waiting the MySQL be ready..."
    until mysql -h"$MASTER_SERVICE" -uroot -p"$MYSQL_ROOT_PASSWORD" -e "SELECT 1" &> /dev/null; do
         echo "Waiting for replica MySQL to be ready..."
        sleep 5
    done

    echo "[MASTER] CREATE DUMP"
    mysqldump -uroot -p"$MYSQL_ROOT_PASSWORD" -h"$MASTER_SERVICE" --all-databases --source-data > /master_dump.sql

    echo "[REPLICA] Waiting the MySQL be ready..."
    until mysql -h"$REPLICA_SERVICE" -uroot -p"$MYSQL_ROOT_PASSWORD" -e "SELECT 1" &> /dev/null; do
        echo "Waiting for replica MySQL to be ready..."
        sleep 5
    done

    echo "[REPLICA] APPLY DUMP"
    mysql -h"$REPLICA_SERVICE" -uroot -p"$MYSQL_ROOT_PASSWORD" < /master_dump.sql

    REPLICA_SQL=$(cat master_dump.sql | grep "CHANGE REPLICATION SOURCE TO SOURCE_LOG_FILE=")
    SOURCE_LOG_FILE=$(echo $REPLICA_SQL | awk -F"SOURCE_LOG_FILE='" '{print $2}' | awk -F"'," '{print $1; exit}')
    SOURCE_LOG_POS=$(echo $REPLICA_SQL | awk -F"SOURCE_LOG_POS=" '{print $2}' | awk -F';' '{print $1; exit}')

    echo "LOG_FILE: $SOURCE_LOG_FILE"
    echo "LOG_POS: $SOURCE_LOG_POS"

    echo "[REPLICA] CONFIGURING SOURCE"
    mysql -h"$REPLICA_SERVICE" -uroot -p"$MYSQL_ROOT_PASSWORD" -e "CHANGE MASTER TO MASTER_HOST='$MASTER_SERVICE', MASTER_USER='root', MASTER_PASSWORD='$MYSQL_ROOT_PASSWORD', SOURCE_LOG_FILE='$SOURCE_LOG_FILE', SOURCE_LOG_POS=$SOURCE_LOG_POS; START REPLICA;"

    echo "[REPLICA] RUNNING"
    exit 0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-replica-8
  namespace: aula6
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
      - name: setup-replica
        image: mysql:8.3
        restartPolicy: Always
        command: ["/bin/bash", "/scripts/replica.sh"]
        volumeMounts:
        - name: config-volume
          mountPath: /scripts

      containers:
      - name: mysql
        image: mysql:8.3
        args: ["--default-authentication-plugin=mysql_native_password", "--mysqlx=0"]
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-replica-secret
              key: db_password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-replica-secret
              key: db_database
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 550Mi
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-replica-data
          mountPath: /var/lib/mysql
        # - name: config-volume
        #   mountPath: /scripts
      
      volumes:
      - name: config-volume
        configMap:
          name: mysql-replica-config

  volumeClaimTemplates:
  - metadata:
      name: mysql-replica-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi